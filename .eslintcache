[{"F:\\Capstone\\ant-app\\ap-for-guest\\src\\App.js":"1","F:\\Capstone\\ant-app\\ap-for-guest\\src\\reportWebVitals.js":"2","F:\\Capstone\\ant-app\\ap-for-guest\\src\\ContractForGuest.js":"3","F:\\Capstone\\ant-app\\ap-for-guest\\src\\index.js":"4","F:\\Capstone\\ant-app\\ap-for-guest\\src\\SearchContract.js":"5"},{"size":1041,"mtime":1611855619896,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609870288158,"results":"8","hashOfConfig":"7"},{"size":14294,"mtime":1611825482516,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1609870288158,"results":"10","hashOfConfig":"7"},{"size":6199,"mtime":1611850398033,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"14zw4p4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},"F:\\Capstone\\ant-app\\ap-for-guest\\src\\App.js",["27","28","29"],"import React from 'react';\n\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport  SearchContractByCode  from \"./SearchContract\";\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { Result, Button } from 'antd';\nimport ContractForGuest from './ContractForGuest'\nimport { Offline, Online } from \"react-detect-offline\";\n\nclass App extends React.Component {\n\n  render() {\n\n    return (\n      <div style={{ backgroundColor: \"white\", height: \"100%\", width: \"80%\", marginLeft: \"10%\" }} >\n\n        <Online>\n\n          \n\n            <Router basename='/'>\n\n              <Route exact path=\"/Search\" component={SearchContractByCode} />\n              <Route exact path=\"/Contract/:id\" component={ContractForGuest} />\n\n\n            </Router>\n\n            {/* {information} */}\n         \n        </Online>\n        <Offline><Result\n          status=\"404\"\n          title=\"404\"\n          subTitle=\"Sorry, the page you visited does not exist.\"\n\n        /></Offline>\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","F:\\Capstone\\ant-app\\ap-for-guest\\src\\reportWebVitals.js",[],["30","31"],"F:\\Capstone\\ant-app\\ap-for-guest\\src\\ContractForGuest.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\n\r\nimport { Descriptions, InputNumber, Space, Button, DatePicker, Input, Card, Form, Select, Table, Comment, List, Avatar, Pagination } from 'antd';\r\nimport 'antd/dist/antd.css'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport JoditEditor from \"jodit-react\";\r\nconst dateFormat = 'YYYY-MM-DD';\r\nconst { RangePicker } = DatePicker;\r\nconst { Column, ColumnGroup } = Table;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst Cryptr = require('cryptr')\r\nconst cryptr = new Cryptr('myTotalySecretKey');\r\nclass ContractForGuest extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.modules = {\r\n            toolbar: [\r\n\r\n            ]\r\n        };\r\n\r\n        this.formats = [\r\n            'font',\r\n            'size',\r\n            'bold', 'italic', 'underline',\r\n            'list', 'bullet',\r\n            'align',\r\n            'color', 'background'\r\n        ];\r\n        this.state = {\r\n\r\n\r\n            openExtension: false,\r\n            openCommentSection: false,\r\n            finish: false,\r\n            showContent: \"customer\",\r\n            comments: [],\r\n            submitting: false,\r\n            value: '',\r\n            currentPage: 1,\r\n            creator: \"\",\r\n            isEdit: false,\r\n            company: {},\r\n            ASide: {\r\n               \r\n            },\r\n            customers: {},\r\n            validSignature: false,\r\n            contract: {},\r\n        };\r\n\r\n       \r\n    }\r\n    \r\n    componentDidMount() {\r\n        const decrypt = cryptr.decrypt(this.props.match.params.id)\r\n        console.log(decrypt)\r\n        axios({\r\n            url: '/api/v1/Contract/' + decrypt,\r\n            method: \"GET\",\r\n\r\n        })\r\n            .then((response) => {\r\n\r\n                return response.data;\r\n            })\r\n            .then((data) => {\r\n                console.log(data.data)\r\n                this.setState({\r\n                    contract: data.data\r\n                })\r\n                axios({\r\n                    url: '/api/v1/Customer/' + data.data.customerId,\r\n                    method: \"GET\",\r\n\r\n                })\r\n                    .then((response) => {\r\n\r\n                        return response.data;\r\n                    })\r\n                    .then((data) => {\r\n                        console.log(data.data)\r\n                        this.setState({\r\n                            customers: data.data\r\n                        })\r\n\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n\r\n\r\n                    });\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n\r\n\r\n            });\r\n\r\n\r\n        axios({\r\n            url: '/api/v1/Contract/a-side-info',\r\n            method: \"GET\",\r\n\r\n            params: {\r\n                id: decrypt,\r\n            }\r\n        })\r\n            .then((response) => {\r\n\r\n                return response.data;\r\n            })\r\n            .then((data) => {\r\n                console.log(data)\r\n               \r\n                axios({\r\n                    url: '/api/v1/Company/info/guest?id='+data.companyId,\r\n                    method: \"PUT\",\r\n        \r\n                   \r\n                })\r\n                    .then((response) => {\r\n        \r\n                        return response.data;\r\n                    })\r\n                    .then((data) => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            ASide: data.data\r\n                        })\r\n        \r\n        \r\n        \r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n        \r\n        \r\n                    });\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n    \r\n    onFinish = () => {\r\n        const decrypt = cryptr.decrypt(this.props.match.params.id)\r\n        console.log(this.state.customers.taxCode)\r\n        if (this.state.company.id !== undefined) {\r\n            axios({\r\n                url: \"https://localhost:44338/api/Signature/PostContract\",\r\n                method: \"POST\",\r\n                data: {\r\n                    Info: this.state.company.taxCode,\r\n\r\n                }\r\n            })\r\n                .then((response) => {\r\n\r\n\r\n                })\r\n                .then((data) => {\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n\r\n\r\n                });\r\n            if (this.state.contract.fileUrl === null) {\r\n                axios({\r\n                    url: '/api/v1/Contract/export-docx/' + this.state.contract.id,\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/docx'\r\n                    },\r\n                    responseType: 'arraybuffer',\r\n\r\n                })\r\n                    .then((response) => {\r\n                        console.log(response)\r\n                        var fileDownload = require('js-file-download');\r\n                        fileDownload(response.data, decrypt + '.docx');\r\n                        return response.data;\r\n                    })\r\n                    .then((data) => {\r\n                        console.log(data.data)\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n\r\n\r\n                    });\r\n            } else {\r\n                window.open(this.props.contract.fileUrl, \"_blank\")\r\n               \r\n            }\r\n        } else {\r\n            axios({\r\n                url: \"https://localhost:44338/api/Signature/PostContract\",\r\n                method: \"POST\",\r\n                data: {\r\n                    Info: this.state.customers.taxCode,\r\n\r\n                }\r\n            })\r\n                .then((response) => {\r\n\r\n\r\n                })\r\n                .then((data) => {\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n\r\n\r\n                });\r\n            if (this.state.contract.fileUrl === null) {\r\n                axios({\r\n                    url: '/api/v1/Contract/export-docx/' + this.state.contract.id,\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/docx'\r\n                    },\r\n                    responseType: 'arraybuffer',\r\n\r\n                })\r\n                    .then((response) => {\r\n                        console.log(response)\r\n                        var fileDownload = require('js-file-download');\r\n                        fileDownload(response.data, decrypt + '.docx');\r\n                        return response.data;\r\n                    })\r\n                    .then((data) => {\r\n                        console.log(data.data)\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n\r\n\r\n                    });\r\n            } else {\r\n                window.open(this.state.contract.fileUrl, \"_blank\")\r\n                \r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n\r\n\r\n        console.log(this.state.customers)\r\n\r\n\r\n        const config = {\r\n            readonly: true, // all options from https://xdsoft.net/jodit/doc/\r\n            toolbar: false\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div style={{ height: \"100vh\", fontSize: 14,width:\"80%\",margin:\"auto\", padding:\"10px\" }}>\r\n            \r\n\r\n                <Space direction=\"vertical\" align=\"center\" >\r\n\r\n                    <Space direction=\"vertical\" align=\"center\" >\r\n                        <Card bordered={false} >\r\n                            <h6 style={{ textAlign: 'center', fontSize: 14 }}>Cộng hòa xã hội chủ nghĩa Việt Nam</h6>\r\n                            <h6 style={{ textAlign: 'center', fontSize: 14 }}>Độc lập-tự do-hạnh phúc</h6>\r\n                            <br />\r\n                            <h2 style={{ textAlign: 'center', fontSize: 16, fontWeight: \"bold\" }}>{this.state.contract.contractName}</h2>\r\n                            <h6 style={{ textAlign: 'center', fontSize: 14 }}>Số {this.state.contract.contractNum}</h6>\r\n                            <h6 style={{ fontSize: 14 }}>Hôm nay, (Ngày hợp đồng có hiệu lực),\r\n                                    tại {this.state.contract.contractPlace}, chúng tôi gồm\r\n                            </h6>\r\n                        </Card>\r\n\r\n                        <Card>\r\n\r\n                            <Descriptions size=\"small\" column={2} title={\"Thông tin bên A\"}  >\r\n                                <Descriptions.Item label={(<><b>{\"Công ty/Tổ chức\"}</b></>)}>{this.state.ASide.name}\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Địa chỉ\"}</b></>)}>{this.state.ASide.address}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Điện thoại\"}</b></>)}>{this.state.ASide.phoneNumber}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Địa chỉ Email\"}</b></>)}>{this.state.ASide.email}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Giấy phép kinh doanh\"}</b></>)}>{this.state.ASide.businessLicense}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Mã số thuế\"}</b></>)}>{this.state.ASide.taxCode}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Tài khoản số\"}</b></>)}>{this.state.ASide.bankAccount}</Descriptions.Item>\r\n                               \r\n                                <Descriptions.Item label={(<><b>{\"Do ông(bà)\"}</b></>)} span={2}>{this.state.ASide.name}</Descriptions.Item>\r\n\r\n                                <Descriptions.Item label={(<><b>{\"Chức vụ\"}</b></>)} span={2}>\r\n                                    Giám đốc làm đại diện\r\n                    </Descriptions.Item>\r\n\r\n\r\n                            </Descriptions>\r\n                            <Descriptions title=\"\" size=\"small\" column={2} title=\"Thông tin bên B\"\r\n\r\n                            >\r\n\r\n                                <Descriptions.Item label={(<><b>{\"Công ty/Tổ chức\"}</b></>)}>\r\n                                    {this.state.customers.name}\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Địa chỉ\"}</b></>)}>{this.state.customers.address}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Điện thoại\"}</b></>)}>{this.state.customers.phoneNumber}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Địa chỉ Email\"}</b></>)}>{this.state.customers.email}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Giấy phép kinh doanh\"}</b></>)}>{this.state.customers.businessLicense}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Mã số thuế\"}</b></>)}>{this.state.customers.taxCode}</Descriptions.Item>\r\n                                <Descriptions.Item label={(<><b>{\"Tài khoản số\"}</b></>)}>{this.state.customers.bankAccount}</Descriptions.Item>\r\n                               \r\n                                <Descriptions.Item label={(<><b>{\"Do ông(bà):\"}</b></>)} span={2}>{this.state.customers.name}</Descriptions.Item>\r\n\r\n                                <Descriptions.Item label={(<><b>{\"Chức vụ\"}</b></>)} span={2}>\r\n                                    làm đại diện\r\n            </Descriptions.Item>\r\n\r\n\r\n                            </Descriptions>\r\n\r\n\r\n                        </Card>\r\n\r\n\r\n                    </Space>\r\n                    \r\n                        \r\n                        <JoditEditor\r\n\r\n                            value={this.state.contract.contractContent}\r\n                            config={config}\r\n                            tabIndex={1} // tabIndex of textarea\r\n\r\n\r\n                        />\r\n                    \r\n                   \r\n                        <Card>\r\n\r\n                            <Form\r\n\r\n                                name=\"basic\"\r\n                                className=\"lcontract-form\"\r\n\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}\r\n\r\n                            >\r\n                                Giá trị hợp đồng:{this.state.contract.contractValue}\r\n                                <h6 style={{ fontSize: 14 }}>Hợp đồng có hiệu lực kể từ ngày 3 tháng 11 năm 2020 đến\r\n                                             {this.state.contract.contractExpiredDate}\r\n                                </h6>\r\n                                <Space size=\"large\">\r\n\r\n\r\n                                    <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Tải về\r\n                                                    </Button>\r\n\r\n\r\n\r\n                                    <Button type=\"primary\" value=\"reject\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Reject\r\n                                                        </Button>\r\n                                </Space>\r\n                            </Form>\r\n\r\n                        </Card>\r\n                    </Space>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ContractForGuest","F:\\Capstone\\ant-app\\ap-for-guest\\src\\index.js",[],["50","51"],"F:\\Capstone\\ant-app\\ap-for-guest\\src\\SearchContract.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader, Tag, Row, Col, Table ,message} from 'antd';\r\nimport { Input } from 'antd';\r\nimport {\r\n    FolderViewOutlined, DeleteOutlined, FormOutlined, FileAddOutlined, UploadOutlined, ContainerOutlined,\r\n    FileProtectOutlined, UserSwitchOutlined, UserAddOutlined, LogoutOutlined, MonitorOutlined\r\n} from \"@ant-design/icons\"\r\nconst { Search } = Input;\r\nconst { Column } = Table;\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nconst middleLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nclass SearchContractByCode extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            searchValue: []\r\n        };\r\n\r\n        \r\n    }\r\n    render() {\r\n        const onSearch = value => {\r\n            axios({\r\n                url: '/api/v1/Contract/get-by-taxcode',\r\n                method: \"GET\",\r\n                params: {\r\n                    taxCode: value,\r\n    \r\n                }\r\n            })\r\n                .then((response) => {\r\n    \r\n                    return response.data;\r\n                })\r\n                .then((data) => {\r\n                    console.log(data.data)\r\n                    this.setState({\r\n                        searchValue: data.data,\r\n                    })\r\n    \r\n    \r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    if (error.response.status === 500) {\r\n                        message.error(error.response.status + ' Server under maintainence');\r\n                    } else if (error.response.status === 404) {\r\n                        message.error(error.response.status + ' Server not found');\r\n                    }\r\n    \r\n                });\r\n        };\r\n        return (\r\n            <Row type=\"flex\" justify=\"center\" align=\"top\" >\r\n\r\n\r\n\r\n\r\n                <Col span={10} > <Search placeholder=\"vui lòng nhập mã hợp đồng\" onSearch={onSearch} enterButton />\r\n\r\n                <Table dataSource={this.state.searchValue}\r\n                \r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"Mã hợp đồng\" dataIndex=\"contractNum\" key=\"contractNum\"\r\n                            render={(text, record) => (\r\n                                <a><FileProtectOutlined /> {text}</a>\r\n                            )}\r\n                        />\r\n                        <Column title=\"Tên hợp đồng\" dataIndex=\"contractTitle\" key=\"contractTitle\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"Bên B\" dataIndex=\"customer\" key=\"customer\"\r\n                            render={(text, record) => (\r\n\r\n                                <b>{text.companyName}</b>\r\n\r\n                            )} />\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"contractExpiredDate\" key=\"contractExpiredDate\"\r\n                            sorter={(a, b) => a.deadline.localeCompare(b.deadline)}\r\n                            sortDirections={['descend', 'ascend']}\r\n                            render={(text, record) => (\r\n\r\n                                <b>{text}</b>\r\n\r\n                            )} />\r\n                        {/* <Column title=\"bên tạo hợp đồng\" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                            render={(text, record) => (\r\n\r\n                                <b>{text}</b>\r\n\r\n                            )} /> */}\r\n                        <Column title=\"giá trị hợp đồng\" dataIndex=\"contractValue\" key=\"contractValue\"\r\n                            render={(text, record) => (\r\n\r\n                                <b>{text}</b>\r\n\r\n                            )} />\r\n                        <Column title=\"Trạng thái\" dataIndex=\"statusAsString\" key=\"statusAsString\"\r\n                            sorter={(a, b) => a.status.localeCompare(b.status)}\r\n                            sortDirections={['descend', 'ascend']}\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'Deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'Active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'Draft') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FolderViewOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContract: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                       \r\n                      \r\n\r\n                    </Table>\r\n\r\n                </Col></Row>\r\n        );\r\n    }\r\n}\r\nexport default SearchContractByCode;",{"ruleId":"67","severity":1,"message":"68","line":6,"column":39,"nodeType":"69","messageId":"70","endLine":6,"endColumn":45},{"ruleId":"67","severity":1,"message":"71","line":6,"column":47,"nodeType":"69","messageId":"70","endLine":6,"endColumn":55},{"ruleId":"67","severity":1,"message":"72","line":7,"column":18,"nodeType":"69","messageId":"70","endLine":7,"endColumn":24},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"67","severity":1,"message":"77","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"78","line":5,"column":24,"nodeType":"69","messageId":"70","endLine":5,"endColumn":35},{"ruleId":"67","severity":1,"message":"79","line":5,"column":98,"nodeType":"69","messageId":"70","endLine":5,"endColumn":105},{"ruleId":"67","severity":1,"message":"80","line":5,"column":107,"nodeType":"69","messageId":"70","endLine":5,"endColumn":111},{"ruleId":"67","severity":1,"message":"81","line":5,"column":113,"nodeType":"69","messageId":"70","endLine":5,"endColumn":119},{"ruleId":"67","severity":1,"message":"82","line":5,"column":121,"nodeType":"69","messageId":"70","endLine":5,"endColumn":131},{"ruleId":"67","severity":1,"message":"83","line":8,"column":27,"nodeType":"69","messageId":"70","endLine":8,"endColumn":33},{"ruleId":"67","severity":1,"message":"84","line":8,"column":35,"nodeType":"69","messageId":"70","endLine":8,"endColumn":40},{"ruleId":"67","severity":1,"message":"68","line":8,"column":42,"nodeType":"69","messageId":"70","endLine":8,"endColumn":48},{"ruleId":"67","severity":1,"message":"71","line":8,"column":50,"nodeType":"69","messageId":"70","endLine":8,"endColumn":58},{"ruleId":"67","severity":1,"message":"85","line":8,"column":60,"nodeType":"69","messageId":"70","endLine":8,"endColumn":70},{"ruleId":"67","severity":1,"message":"86","line":13,"column":7,"nodeType":"69","messageId":"70","endLine":13,"endColumn":17},{"ruleId":"67","severity":1,"message":"87","line":14,"column":9,"nodeType":"69","messageId":"70","endLine":14,"endColumn":20},{"ruleId":"67","severity":1,"message":"88","line":15,"column":9,"nodeType":"69","messageId":"70","endLine":15,"endColumn":15},{"ruleId":"67","severity":1,"message":"89","line":15,"column":17,"nodeType":"69","messageId":"70","endLine":15,"endColumn":28},{"ruleId":"67","severity":1,"message":"90","line":16,"column":9,"nodeType":"69","messageId":"70","endLine":16,"endColumn":17},{"ruleId":"67","severity":1,"message":"91","line":17,"column":9,"nodeType":"69","messageId":"70","endLine":17,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":334,"column":76,"nodeType":"94","endLine":334,"endColumn":99},{"ruleId":"73","replacedBy":"95"},{"ruleId":"75","replacedBy":"96"},{"ruleId":"67","severity":1,"message":"77","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"97","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":20},{"ruleId":"67","severity":1,"message":"98","line":8,"column":25,"nodeType":"69","messageId":"70","endLine":8,"endColumn":39},{"ruleId":"67","severity":1,"message":"99","line":8,"column":41,"nodeType":"69","messageId":"70","endLine":8,"endColumn":53},{"ruleId":"67","severity":1,"message":"100","line":8,"column":55,"nodeType":"69","messageId":"70","endLine":8,"endColumn":70},{"ruleId":"67","severity":1,"message":"101","line":8,"column":72,"nodeType":"69","messageId":"70","endLine":8,"endColumn":86},{"ruleId":"67","severity":1,"message":"102","line":9,"column":26,"nodeType":"69","messageId":"70","endLine":9,"endColumn":44},{"ruleId":"67","severity":1,"message":"103","line":9,"column":46,"nodeType":"69","messageId":"70","endLine":9,"endColumn":61},{"ruleId":"67","severity":1,"message":"104","line":9,"column":63,"nodeType":"69","messageId":"70","endLine":9,"endColumn":77},{"ruleId":"67","severity":1,"message":"105","line":9,"column":79,"nodeType":"69","messageId":"70","endLine":9,"endColumn":94},{"ruleId":"67","severity":1,"message":"106","line":13,"column":7,"nodeType":"69","messageId":"70","endLine":13,"endColumn":13},{"ruleId":"67","severity":1,"message":"107","line":22,"column":7,"nodeType":"69","messageId":"70","endLine":22,"endColumn":17},{"ruleId":"67","severity":1,"message":"108","line":28,"column":7,"nodeType":"69","messageId":"70","endLine":28,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":89,"column":33,"nodeType":"111","endLine":89,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":95,"column":33,"nodeType":"111","endLine":95,"endColumn":36},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Button' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'ReactDOM' is defined but never used.","'InputNumber' is defined but never used.","'Comment' is defined but never used.","'List' is defined but never used.","'Avatar' is defined but never used.","'Pagination' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'dateFormat' is assigned a value but never used.","'RangePicker' is assigned a value but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'Option' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["112"],["113"],"'PageHeader' is defined but never used.","'DeleteOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'FileAddOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'UserSwitchOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'MonitorOutlined' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'middleLayout' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]